"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const mockResultsFromCapturedOutput_1 = require("../results/mockResultsFromCapturedOutput");
const neo4j = require('neo4j-driver');
const mockDatabaseInfo = {
    URI: 'neo4j+s://84751e18.databases.neo4j.io',
    USER: 'faker',
    PASSWORD: 'thisIsAfakeDatabase',
};
function mockSessionFromQuerySet(querySet) {
    const driver = neo4j.driver(mockDatabaseInfo.URI, neo4j.auth.basic(mockDatabaseInfo.USER, mockDatabaseInfo.PASSWORD));
    const fakeSession = driver.session();
    fakeSession.run = async (query, params) => {
        let output = '';
        querySet.map((querySpec) => {
            if (querySpec.query === query &&
                JSON.stringify(querySpec.params) === JSON.stringify(params)) {
                output = mockResultsFromCapturedOutput_1.mockResultsFromCapturedOutput(querySpec.output);
            }
        });
        if (output !== '')
            return output;
        throw new Error(`the query set provided does not contain the given query and params:
        query provided = ${query}.`);
    };
    return fakeSession;
}
module.exports = mockSessionFromQuerySet;
